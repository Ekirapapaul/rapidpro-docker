sudo: required
services:
  - docker
cache:
  directories:
    - $HOME/postgresql
env:
  global:
    - GREP_TIMEOUT=360
    - REGISTRY_USER=rapidproautomation
    # NOTE: this is generated with `travis encrypt REGISTRY_PASS="the-password"`
    #       which is decrypted by Travis CI and set as environment variables
    - secure: "qvNYcLcVgZ5tV/pTgttWOAR6pOmFEAUEGdsZMiVJUf5dBVA8FoGC/YVIh78BJT1YiwGSzPVplymCZuYN57fDCRddHvVv1yvSQsk1VES3N3eC3dAmXHLBnMwY5MshLAL8CZ5Rc/jcGF+PHDJBr5cFK7aYstPU6pWAaytrWtg0itd+uvJ963VnyFSRvnqVpiKb4G/CYpvn8OcXMD5rFqGCwpmyiOUi3eKSdJtogwq2IOvokO/rGcgwYPGsMJf8/K282oix5TFCsuMU6twKdXhHJEEhtXVuoLaU7LlqC3Uz2SN+SwR4qF4diHXYmqJZwXMctYGWXhEuEn8AHpvN0+5tZzoSHrmIvrEGVA2PAaeGF6Fnpz4ODMzbLIbbV7THghHTGdDgSb/7lzJ9zfZuOoTpgKfUOj4JscVjL2UMb81ouJ7Wq7V2Feyzf22OymyzAgTjE3Bxaj/hz/aIYcvV6LjTyERhKej68YqeqXNfLtF2Tm9w97xiW8UPlfe3KAmZS7VaJ9txJt+p0HqefI3/A1/ibyhRipcguYH3OpO+D08wLP5zK6GtqnVtI+9+eKfBB8WnATRQI9l/Zv3hk6uz+CJyrfpqz7OPxNLeoZ3bt6p9i7y+KrRu+fQmisFzCR6sKLbhEW/7UCqJZDv/x0Ua+oFcxC6w4QNVbVZKRnGFFlTjWeE="

# Update Docker Engine
before_install:
  - sudo apt-get update
  - sudo apt-get install -qy -o Dpkg::Options::="--force-confold" docker-engine coreutils

before_cache:
  - docker exec --user=postgres postgresql pg_dump rapidpro > $HOME/postgresql/rapidpro.sql

before_script:
  - image="rapidpro/rapidpro"
  - version=$(curl -s https://api.github.com/repos/nyaruka/rapidpro/tags  | jq -r 'map(select(.name | test("^v[0-9\\.]+$"))) | .[0].name')

script:
  # Setup postgresql and load sql dump if exists
  - docker pull mdillon/postgis:9.6
  - docker run -d --name postgresql -e POSTGRES_DB=rapidpro mdillon/postgis:9.6
  - timeout $GREP_TIMEOUT grep -m 1 'PostgreSQL init process complete; ready for start up.' <(docker logs --follow postgresql 2>&1)
  # Load the cached postgresql dump to speed up migrations
  - if [[ -f $HOME/postgresql/rapidpro.sql ]]; then cat $HOME/postgresql/rapidpro.sql | docker exec -i --user=postgres postgresql psql rapidpro; fi

  # Setup redis
  - docker pull redis:alpine
  - docker run -d --name redis redis:alpine
  - timeout $GREP_TIMEOUT grep -m 1 'The server is now ready to accept connections on port 6379' <(docker logs --follow redis 2>&1)

  # Build RapidPro and run it
  - docker pull rapidpro/rapidpro-base
  - docker build --tag "$image" --build-arg RAPIDPRO_VERSION=$version .
  - >
    docker run --name rapidpro \
      --env-file docker.envfile \
      --link redis \
      --link postgresql \
      --publish 8000:8000 \
      --detach \
      "$image"

  - timeout $GREP_TIMEOUT grep -m 1 'static files copied' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'Compressing... done' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'Running migrations' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'spawned uWSGI http 1' <(docker logs --follow rapidpro 2>&1)
  - docker exec rapidpro /venv/bin/python /rapidpro/manage.py check

after_script:
  - docker logs rapidpro
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
deploy:
  provider: script
  skip_cleanup: true
  script: ./deploy.sh "$image" "$version"
  on:
    branch: master
